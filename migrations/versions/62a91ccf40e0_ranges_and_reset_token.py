"""Adding reset token and range based event/schedules.

Revision ID: 62a91ccf40e0
Revises: cbfae2e15803
Create Date: 2017-07-08 21:58:53.875033

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '62a91ccf40e0'
down_revision = 'cbfae2e15803'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('month_number', sa.SmallInteger(), nullable=False))
    op.add_column('events', sa.Column('scheduled_tz_duration', postgresql.TSTZRANGE(), nullable=False))
    op.add_column('events', sa.Column('scheduling_tz_duration', postgresql.TSTZRANGE(), nullable=False))
    op.add_column('events', sa.Column('utc_duration', postgresql.TSTZRANGE(), nullable=False))
    op.drop_column('events', 'scheduling_tz_end')
    op.drop_column('events', 'scheduled_tz_end')
    op.drop_column('events', 'scheduling_tz_start')
    op.drop_column('events', 'utc_start')
    op.drop_column('events', 'scheduled_tz_start')
    op.drop_column('events', 'utc_end')
    op.add_column('schedules', sa.Column('local_duration', postgresql.TSTZRANGE(), nullable=False))
    op.add_column('schedules', sa.Column('month_number', sa.SmallInteger(), nullable=False))
    op.add_column('schedules', sa.Column('utc_duration', postgresql.TSRANGE(), nullable=False))
    op.drop_column('schedules', 'utc_open')
    op.drop_column('schedules', 'local_tz_open')
    op.drop_column('schedules', 'local_tz_end')
    op.drop_column('schedules', 'utc_end')
    op.add_column('users', sa.Column('reset_token', sa.String(length=36), nullable=True))
    op.create_index(op.f('ix_users_reset_token'), 'users', ['reset_token'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_reset_token'), table_name='users')
    op.drop_column('users', 'reset_token')
    op.add_column('schedules', sa.Column('utc_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('schedules', sa.Column('local_tz_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('schedules', sa.Column('local_tz_open', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('schedules', sa.Column('utc_open', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('schedules', 'utc_duration')
    op.drop_column('schedules', 'month_number')
    op.drop_column('schedules', 'local_duration')
    op.add_column('events', sa.Column('utc_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('scheduled_tz_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('utc_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('scheduling_tz_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('scheduled_tz_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('scheduling_tz_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('events', 'utc_duration')
    op.drop_column('events', 'scheduling_tz_duration')
    op.drop_column('events', 'scheduled_tz_duration')
    op.drop_column('events', 'month_number')
    # ### end Alembic commands ###
